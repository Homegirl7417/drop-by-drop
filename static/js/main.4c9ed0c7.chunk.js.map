{"version":3,"sources":["component/Header/Header.js","component/Template/Template.js","component/common/WorkListItem.js","api/index.js","api/getAllWorkList.js","component/WorkTemplate/WorkTemplate.js","screens/HomeScreen.js","screens/ManageScreen.js","component/common/WorkRegisterItem.js","api/postWorkForm.js","screens/RegisterScreen.js","screens/LoginScreen.js","screens/App/App.js","screens/NotFoundScreen.js","reportWebVitals.js","index.js"],"names":["Header","useState","currentRoute","navigation","index","title","path","func","alert","useEffect","HeaderContainer","LogoSection","LogoTitle","NavigationSection","map","item","NavigationAlert","onClick","NavigationItem","NavigationTitle","to","current","LoginSection","Login","styled","div","span","Link","Template","props","Container","InnerContainer","Contents","children","WorkListItem","description","pay","dueDate","categoryName","CategorySection","Category","WorkInfoSection","Title","EmployerInfoSection","Pay","Description","outline","readOnly","textarea","axios","create","baseURL","headers","WorkTemplate","isBorder","WorkForm","HomeScreen","searchCategoryName","input","currentCategory","searchDueDate","currentDueDate","category","testWorkList","applyWork","window","confirm","ListGrid","ManageScreen","CategoryList","onChange","WorkRegisterItem","kind","placeholder","type","value","postWorkForm","a","postApi","api","post","data","RegisterScreen","setTitle","setDescription","setCategory","setPay","setDueDate","registerForm","console","log","result","length","event","target","Button","LoginScreen","App","GlobalStyle","element","exact","createGlobalStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c9ed0c7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Header = () => {\n    const [currentRoute, setCurrentRoute] = useState(0);\n    const [path, setPath] = useState('/'); \n    // const { pathname } = useLocation();\n    // console.log(\"hell\" + pathname);\n    // setPath(pathname);\n    const navigation = [\n        {   \n            index: 0,\n            title: '등록된 일거리',\n            path: '/'\n        },\n        {\n            index: 1,\n            title: '일거리 등록',\n            path: '/register/work'\n        },\n        {\n            index: 2,\n            title: '진행 작업 관리',\n            path: '/manage/work',\n            func: () => alert('시스템 준비중입니다.')\n        },\n        {\n            index: 3,\n            title: '고객문의',\n            func: () => alert('티끌 시스템 및 서비스 이용에 관련해서 문의사항이 있으신가요?\\n문의사항은 hk7417@ajou.ac.kr로 부탁드립니다.')\n        }\n    ];\n    useEffect(() => {\n        // console.log('hi2222'+path);\n        // const detectIndex = (index) => {\n        //     let currentIndex = 0;\n        //     switch (index){\n        //         case '/': \n        //             currentIndex = 0;\n        //             break; \n        //         case '/register/work':\n        //             currentIndex = 1;\n        //             break;\n        //         case '/manage/work':\n        //             currentIndex = 2;\n        //             break;\n        //         default:\n        //             currentIndex = 100;\n        //             break; \n        //     }\n        //     setCurrentRoute(currentIndex);\n        // }\n        // console.log('hi2222'+path);\n        // detectIndex(path);\n    }, []);\n    return (\n        <HeaderContainer>\n            <LogoSection>\n                <LogoTitle>\n                    티끌\n                </LogoTitle>\n            </LogoSection>\n            <NavigationSection>\n                {\n                    navigation.map(item => \n                        item.title === '고객문의' || item.title === '진행 작업 관리' \n                        ?  <NavigationAlert onClick={item.func}>\n                            {item.title}\n                        </NavigationAlert>\n                        : <NavigationItem>\n                            <NavigationTitle\n                                to={item.path}\n                                index={item.index}\n                                current={currentRoute}\n                            >\n                                {item.title}\n                            </NavigationTitle>\n                        </NavigationItem>\n                    )\n                }   \n            </NavigationSection>\n            <LoginSection>\n                <Login\n                    to='/login'\n                >\n                    로그인\n                </Login>\n            </LoginSection>\n        </HeaderContainer>\n    );\n}\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\n    width: 1080px;\n    height: 100px;\n    border-bottom: 1px solid gray;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    padding: 20px 20px;\n`\n\nconst LogoSection = styled.div``\n\nconst LogoTitle = styled.span`\n    font-size: 36px;\n    color: orange;\n`\n\nconst LoginSection = styled.div``\n\nconst Login = styled(Link)`\n    display: block;\n    background-color: orange;\n    color: white;\n    font-size: 14px;\n    text-align: center;\n    width: 100px;\n    height: 30px;\n    line-height: 30px;\n    border-radius: 20px;\n    cursor: pointer;\n`\n\nconst NavigationSection = styled.div`\n    display: flex;\n    margin: 0px 50px;\n`\n\nconst NavigationItem = styled.div`\n    width: 150px;\n`\n\nconst NavigationAlert = styled.div`\n    width: 150px;\n    font-size: 18px;\n    cursor: pointer;\n`\n\n// border-bottom: ${props => props.index === props.current ? '3px solid orange' : 'none'};\n// color: ${props => props.index === props.current ? 'orange' : 'black'};\nconst NavigationTitle = styled(Link)`\n    font-size: 18px;\n    cursor: pointer;\n`","import React from 'react';\nimport styled from 'styled-components';\nimport Header from '../Header';\n\nconst Template = (props) => {\n    return (\n        <Container>\n            <InnerContainer>\n                <Header/>\n                <Contents>\n                    {props.children}\n                </Contents>\n            </InnerContainer>\n        </Container>\n    );\n}\n\nexport default Template;\n\nconst Container = styled.div`\n    min-width: 1280px;\n    text-align: center;\n`\n\nconst InnerContainer = styled.div`\n    display: inline-block;\n    margin: auto;\n`\n\nconst Contents = styled.div`\n    min-height: calc(100vh - 100px);\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    padding: 50px 0px;\n    text-align: center;\n`","import React from 'react';\nimport styled from 'styled-components';\n\nconst WorkListItem = ({ title='', description='', pay=null, dueDate='', categoryName, onClick }) => {\n    return (\n        <Container onClick={onClick}>\n            <CategorySection>\n                <Category>\n                    {categoryName}\n                </Category>\n            </CategorySection>\n            <WorkInfoSection>\n                <Title>\n                    {title}\n                </Title>\n                <EmployerInfoSection>\n                    <Pay>{pay}원</Pay>\n                    <Pay>마감일: &nbsp;{dueDate}</Pay>\n                </EmployerInfoSection>\n                <Description outline={'none'} readOnly={true}>\n                    {description}\n                </Description>                \n            </WorkInfoSection>\n        </Container>\n    );\n}\n\nexport default WorkListItem;\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 230px;\n    height: 300px;\n    border: 1px solid gray;\n    border-radius: 10px;\n    padding: 20px 30px;\n    text-align: left;\n    cursor: pointer;\n    margin-top: 20px;\n`\n\nconst CategorySection = styled.div`\n    width: 230px;\n    height: 30px;\n    display: flex;\n    flex-directions: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n`\n\nconst WorkInfoSection = styled.div``\n\nconst EmployerInfoSection = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 230px;\n    height: 20px;\n    padding-top: 15px;\n    border-bottom: 0.5px solid gray;\n`\n\nconst Pay = styled.div`\n    font-size: 12px;\n`\n\nconst Title = styled.div`\n    min-height: 30px;\n    line-height: 30px;\n    font-size: 18px;\n    font-weight: bold;\n    color: orange;\n`\n\nconst Description = styled.textarea`\n    width: 240px;\n    min-height: 100px;\n    margin-top: 20px;\n    font-size: 14px;\n    color: black;\n    resize: none;\n    outline: none;\n    border: none;\n`\n\nconst Category = styled.div`\n    width: 80px;\n    height: 20px;\n    font-size: 8px;\n    line-height: 22px;\n    background-color: gray;\n    border-radius: 20px;\n    color: black;\n    text-align: center;\n`","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://3.139.42.82:8081',\n  headers: {\n    'Content-Type' : 'application/json',\n  },\n});","import api from './';\n\nexport default async function getAllWorkList() {\n    try {\n        return await getApi();\n    } catch(err) {\n        return false;\n    }\n}\n\nconst getApi = async () => {\n    const { data: json } = await api.get(`/works`);\n    if(json) return json;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst WorkTemplate = ({title, children, isBorder=true}) => {\n    return (\n        <Container>\n            <Title>\n                {title}\n            </Title>\n            <WorkForm isBorder={isBorder}>\n                {children}\n            </WorkForm>\n        </Container>\n    );\n}\n\nexport default WorkTemplate;\n\nconst Container = styled.div`\n    padding: 10px 20px;\n`\n\nconst Title = styled.div`\n    font-size: 24px;\n    font-weight: bold;\n    color: orange;\n    text-align: left;\n`\n\nconst WorkForm = styled.div`\n    width: 800px;\n    margin: 50px 20px;\n    padding: 30px;\n    border: ${props => props.isBorder ? '1px solid gray' : 'none'};\n    border-radius: 10px;\n`","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Template from '../component/Template';\nimport WorkListItem from '../component/common/WorkListItem';\nimport getAllWorkList from '../api/getAllWorkList';\nimport WorkTemplate from '../component/WorkTemplate';\n\nconst HomeScreen = () => {\n    const searchCategoryName = (input) => {\n        let currentCategory = '기타';\n        switch (input){\n            case 0: \n                currentCategory = '라벨링';\n                break; \n            case 1:\n                currentCategory = '설문조사';\n                break;\n            case 2:\n                currentCategory = '심부름';\n                break;\n            case 3:\n                currentCategory = '초안 번역';\n                break; \n            case 4:\n                currentCategory = '블로그 포스팅';\n                break;                                   \n            default:\n                currentCategory = '기타';\n                break; \n        }\n        return currentCategory; \n    }\n    const searchDueDate = (input) => {\n        let currentDueDate = '상시모집';\n        switch (input){\n            case null: \n                currentDueDate = '상시모집';\n                break;                                  \n            default:\n                currentDueDate = input;\n                break; \n        }\n        return currentDueDate; \n    }\n    const [workList, setWorkList] = useState([]);\n    const [testWorkList, setTestWorkList] = useState([\n        {\n            title: '강아지 산책',\n            description: '강아지를 1시간동안 산책시켜주세요',\n            pay: 100000, \n            dueDate: '2021-12-27',\n            category: 0\n        },\n        {\n            title: '강아지 산책',\n            description: '강아지를 1시간동안 산책시켜주세요',\n            pay: 100000, \n            dueDate: '2021-12-27',\n            category: 0\n        },\n        {\n            title: '강아지 산책',\n            description: '강아지를 1시간동안 산책시켜주세요',\n            pay: 100000, \n            dueDate: '2021-12-27',\n            category: 0\n        },\n        {\n            title: '강아지 산책',\n            description: '강아지를 1시간동안 산책시켜주세요',\n            pay: 100000, \n            dueDate: '2021-12-27',\n            category: 0\n        },\n        {\n            title: '강아지 산책',\n            description: '강아지를 1시간동안 산책시켜주세요',\n            pay: 100000, \n            dueDate: '2021-12-27',\n            category: 0\n        },\n    ]);\n    const applyWork = () => {\n        if(window.confirm('해당 작업을 신청하시겠습니까?') === true) {\n            alert(\"작업이 신청되었습니다.\")\n        }\n    }\n    // useEffect(() => {\n    //     const getAllList = async () => {\n    //         console.log(\"step1\")\n    //         const result = await getAllWorkList();\n    //         console.log(\"step2\")\n    //         if (result) {\n    //             console.log(\"step3\")\n    //             setWorkList(result);\n    //             alert('작업 목록 성공');\n    //             // 전체 목록 페이지로 이동 추가\n    //         } else {\n    //             console.log(\"step4\")\n    //             alert('작업 목록을 불러오지 못했습니다.');\n    //         }\n    //     }\n    //     getAllList();\n    // }, []);\n\n    return (\n        <Template>\n            <WorkTemplate\n                title=\"등록된 일거리\"\n                isBorder={false}\n            >\n                <ListGrid>\n                    {/* {\n                        workList.map(item => {\n                            return (\n                                <WorkListItem\n                                    title={item.title}\n                                    description={item.description}\n                                    pay={item.pay}\n                                    dueDate={searchDueDate(item.dueDate)} \n                                    categoryName={searchCategoryName(item.category)}\n                                    onClick={applyWork}\n                                />\n                            )\n                        })\n                    } */}\n                    {\n                        testWorkList.map(item => {\n                            return (\n                                <WorkListItem\n                                    title={item.title}\n                                    description={item.description}\n                                    pay={item.pay}\n                                    dueDate={searchDueDate(item.dueDate)} \n                                    categoryName={searchCategoryName(item.category)}\n                                    onClick={applyWork}\n                                />\n                            )\n                        })\n                    }\n                </ListGrid>\n            </WorkTemplate>\n        </Template>\n    );\n}\n\nexport default HomeScreen;\n\nconst ListGrid = styled.div`\n    display: grid;\n    flex-directions: row;\n    grid-template-columns: repeat(3, 320px)};\n`","import React from 'react';\nimport Template from '../component/Template';\n\nconst ManageScreen = () => {\n    return (\n        <Template>\n            진행 작업 관리\n        </Template>\n    );\n}\n\nexport default ManageScreen;","import React from 'react';\nimport styled from 'styled-components';\n\nconst CategoryList = ({onChange, category}) => {\n    return (\n        <CategorySection>\n            <Category category={category===0} onClick={() => onChange(0)}>라벨링</Category>\n            <Category category={category===1} onClick={() => onChange(1)}>설문조사</Category>\n            <Category category={category===2} onClick={() => onChange(2)}>심부름</Category>\n            <Category category={category===3} onClick={() => onChange(3)}>초안 번역</Category>\n            <Category category={category===4} onClick={() => onChange(4)}>블로그 포스팅</Category>\n            <Category category={category===5} onClick={() => onChange(5)}>기타</Category>\n        </CategorySection>\n    );\n}\nconst WorkRegisterItem = ({title, description, kind = 'text', onChange, category, placeholder}) => {\n    return (\n        <Container>\n            <Title>\n                {title}\n            </Title>\n            {\n                kind === 'category'\n                ? <CategoryList\n                    category={category}\n                    onChange={onChange}\n                />\n                : <Description \n                    type=\"text\" \n                    kind={kind}\n                    value={description} \n                    onChange={onChange}\n                    placeholder={placeholder}\n                />\n            }\n        </Container>\n    );\n}\n\nexport default WorkRegisterItem;\n\nconst Container = styled.div`\n    margin: 40px 0px;\n`\n\nconst Title = styled.div`\n    width: 600px;\n    height: 30px;\n    padding: 0px 20px;\n    font-size: 18px;\n    font-weight: bold;\n    color: orange;\n    text-align: left;\n`\n\nconst Description = styled.textarea`\n    width: 600px;\n    height: ${props => props.kind === 'desc' ? '100px' : '30px'};\n    padding: 20px;\n    text-align: left;\n    border: 1px solid #E1F5FE;\n    border-radius: 20px;\n    background-color: #E1F5FE;\n    font-size: 16px;\n    color: black;\n    resize: none;\n`\n\nconst CategorySection = styled.div`\n    width: 600px;\n    padding: 20px;\n    display: flex;\n    margin: auto;\n`\n\nconst Category = styled.div`\n    width: 80px;\n    height: 30px;\n    font-size: 12px;\n    line-height: 33px;\n    background-color: ${props => props.category ? 'orange' : '#E1F5FE'};\n    margin-right: 20px;\n    border-radius: 20px;\n    cursor: pointer;\n    color: ${props => props.category ? 'white' : 'black'};\n`","import api from './';\n\nexport default async function postWorkForm(title, description, pay, category, dueDate) {\n    try {\n        return await postApi(title, description, pay, category, dueDate);\n    } catch(err) {\n        return false;\n    }\n}\n\nconst postApi = async (title, description, pay, category, dueDate) => {\n    const { data: json } = await api.post(`/work-form`, {\n        title,\n        description,\n        pay,\n        category,\n        dueDate\n    });\n    if(json) return true;\n}","import React, {useState} from 'react';\nimport Template from '../component/Template';\nimport WorkTemplate from '../component/WorkTemplate';\nimport WorkRegisterItem from '../component/common/WorkRegisterItem';\nimport styled from 'styled-components';\nimport postWorkForm from '../api/postWorkForm';\n\nconst RegisterScreen = () => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState(0);\n    const [pay, setPay] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const handleTitle = event => {\n        const {\n          target: { value },\n        } = event;\n        value.length <= 30 && setTitle(value);\n    };\n    const handleDescription = event => {\n        const {\n          target: { value },\n        } = event;\n        setDescription(value);\n    };\n    const handlePay = event => {\n        const {\n          target: { value },\n        } = event;\n        setPay(value);\n    };\n    const handleCategory = (input = 0) => {\n        setCategory(input);\n    };\n    const handleDueDate = event => {\n        const {\n          target: { value },\n        } = event;\n        setDueDate(value);\n    };\n    const registerForm = async () => {\n        console.log(\"step1\")\n        const result = await postWorkForm(title, description, pay, category, dueDate);\n        console.log(\"step2\")\n        if (result) {\n            console.log(\"step3\")\n            alert('작업 등록이 완료되었습니다.');\n            // 전체 목록 페이지로 이동 추가\n        } else {\n            console.log(\"step4\")\n            alert('작업이 등록 중 오류가 발생했습니다. 잠시 후 다시 시도해주시길 바랍니다.');\n        }\n    }\n    return (\n        <Template>\n            <WorkTemplate\n                title=\"일거리 등록\"\n            >\n                <WorkRegisterItem\n                    title={`제목(${title.length}/최대 30자)`}\n                    placeholder=\"제목은 30자 이내로 입력해주세요\"\n                    kind=\"text\"\n                    description={title}\n                    onChange={handleTitle}\n                />\n                <WorkRegisterItem\n                    title={\"카테고리\"}\n                    category={category}\n                    kind='category'\n                    description={category}\n                    onChange={handleCategory}\n                />\n                <WorkRegisterItem\n                    title={\"작업 설명\"}\n                    placeholder=\"작업의 상세한 설명을 입력해주세요\"\n                    kind='desc'\n                    description={description}\n                    onChange={handleDescription}\n                />\n                <WorkRegisterItem\n                    title={'보수'}\n                    placeholder=\"작업의 보수를 숫자로 입력해주세요\"\n                    kind='text'\n                    description={pay}\n                    onChange={handlePay}\n                />\n                <WorkRegisterItem\n                    title={'작업 완료 기간(YYYY-MM-DD)'}\n                    placeholder=\"작업 완료 기간은 YYYY-MM-DD 형식으로 입력해주세요\"\n                    kind='text'\n                    description={dueDate}\n                    onChange={handleDueDate}\n                />\n                <Button onClick={registerForm}>\n                    등록 완료\n                </Button>\n            </WorkTemplate>\n        </Template>\n    );\n}\n\nexport default RegisterScreen;\n\nconst Button = styled.div`\n    width: 642px;\n    height: 60px;\n    line-height: 60px;\n    color: white;\n    font-size: 16px;\n    font-weight: bold;\n    background-color: orange;\n    border-radius: 20px;\n    cursor: pointer;\n    margin: auto;\n    margin-top: 50px;\n`","import React from 'react';\nimport Template from '../component/Template';\n\nconst LoginScreen = () => {\n    return (\n        <Template>\n            로그인 페이지\n        </Template>\n    );\n}\n\nexport default LoginScreen;","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Routes, Route } from 'react-router-dom';\nimport HomeScreen from '../HomeScreen';\nimport ManageScreen from '../ManageScreen';\nimport RegisterScreen from '../RegisterScreen';\nimport LoginScreen from '../LoginScreen';\nimport NotFoundScreen from '../NotFoundScreen';\n\n\nconst App = () => {\n    return (\n        <Container>\n            <GlobalStyle/>\n            <Routes>\n                {/* <Route path='*' element={<NotFoundScreen/>} /> */}\n                <Route path='*' element={<HomeScreen/>} />\n\n                {/* <Route exact path='/' element={<HomeScreen/>} /> */}\n                <Route exact path='/register/work' element={<RegisterScreen/>} />\n                <Route exact path='/manage/work' element={<ManageScreen/>} />\n                <Route exact path='/login' element={<LoginScreen/>} />\n            </Routes>\n        </Container>\n    );\n}\n\nexport default App;\n\nconst GlobalStyle = createGlobalStyle`\n    *, input, button {\n        font-family: 'Noto Sans KR', sans-serif;\n        font-style: normal;\n        font-size: 16px;\n    }\n\tbody {\n        font-family: 'Noto Sans KR', sans-serif;\n        font-style: normal;\n        font-size: 16px;\n        line-height: 0px;\n\t\tpadding: 0;\n        margin: 0;\n        white-space: pre-line;\n    }\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    li {\n        list-style-type : none\n    }\n    ul {\n        margin-block-start: 0px;\n        margin-block-end: 0px;\n        padding-inline-start: 0px;\n    }\n`;\n\nconst Container = styled.div``;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundScreen = () => {\n    return (\n        <Container>\n            <InnerContainer>\n                <Title>\n                    티끌\n                </Title>\n                <Description>\n                    이용에 불편을 드려 죄송합니다.\n                    <br/>입력하신 페이지의 URL이 변경되었거나 존재하지 않는 페이지입니다.\n                    <br/>입력하신 주소가 정확한지 다시 한번 확인해 주시기 바랍니다.\n                </Description>\n                <HomeButton\n                    to='/'\n                >\n                    홈으로\n                </HomeButton>\n            </InnerContainer>\n        </Container>\n    );\n}\n\nexport default NotFoundScreen;\n\nconst Container = styled.div`\n    padding: 0px;\n    margin: 0px;\n    width: 100vw;\n    height: 100vh;\n    background-color: white;\n`\n\nconst InnerContainer = styled.div`\n    min-width: 500px;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    margin: auto;\n    color: orange;\n    text-align: center;\n`\n\nconst Title = styled.div`\n    font-size: 48px;\n    line-height: 60px;\n`\n\nconst Description = styled.div`\n    font-size: 16px;\n    line-height: 24px;\n    margin: 20px 0px;\n`\n\nconst HomeButton = styled(Link)`\n    display: block;\n    width: 100px;\n    height: 30px;\n    line-height: 30px;\n    margin: auto;\n    border-radius: 20px;\n    background-color: orange;\n    font-size: 16px;\n    color: white;\n    cursor: pointer;\n`\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './screens/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}