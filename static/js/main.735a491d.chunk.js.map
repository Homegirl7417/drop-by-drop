{"version":3,"sources":["redux/modules/users.js","redux/configureStore.js","component/Header/Header.js","component/Template/Template.js","component/common/WorkListItem.js","api/index.js","api/getAllWorkList.js","component/WorkTemplate/WorkTemplate.js","api/putRequestWork.js","component/Modal/Modal.js","utils/searchDueDate.js","utils/searchCategoryName.js","screens/HomeScreen.js","image/profileImage1.png","component/common/RegisteredWorkItem.js","api/getEmployerWorkList.js","screens/ManageScreen.js","component/common/WorkRegisterItem.js","api/postWorkForm.js","screens/RegisterScreen.js","screens/LoginScreen.js","screens/App/App.js","screens/NotFoundScreen.js","reportWebVitals.js","index.js"],"names":["LOG_IN","LOG_OUT","setLogIn","id","type","initialState","isLoggedIn","applyLogIn","state","action","sessionStorage","setItem","applyLogOut","removeItem","actionCreators","login","password","dispatch","fetch","method","headers","body","JSON","stringify","pw","then","res","status","logout","isLogin","reducer","history","createBrowserHistory","middlewares","thunk","routerMiddleware","combineReducers","users","routing","routerReducer","store","createStore","applyMiddleware","Header","userId","handleLogout","useState","currentRoute","navigation","index","title","path","func","alert","useEffect","HeaderContainer","LogoSection","LogoTitle","NavigationSection","map","item","NavigationAlert","onClick","NavigationItem","NavigationTitle","to","current","LoginSection","Login","styled","div","span","props","Link","Template","Container","InnerContainer","Contents","children","WorkListItem","isBorder","description","pay","dueDate","categoryName","CategorySection","Category","WorkInfoSection","Title","EmployerInfoSection","Pay","Description","outline","readOnly","textarea","axios","create","baseURL","getAllWorkList","a","getApi","api","get","json","data","WorkTemplate","WorkForm","postRequestWork","workID","postApi","put","ModalStyles","content","top","left","right","bottom","marginRight","transform","borderRadius","width","padding","overlay","height","margin","backgroundColor","zIndex","Modal","isOpen","onRequestClose","subtitle","cancleText","acceptText","cancleHandler","acceptHandler","style","ModalContent","TitleSection","Subtitle","DescriptionSection","ButtonSection","CancleButton","AcceptButton","ButtonStyle","input","currentDueDate","currentCategory","HomeScreen","useDispatch","useSelector","modalIsOpen","setModalIsOpen","modalTitle","setModalTitle","applyWorkID","setApplyWorkID","workList","setWorkList","requestWork","console","log","putRequestWork","result","getItem","getAllList","userAction","e","window","pushState","location","reload","ListGrid","searchDueDate","searchCategoryName","category","RegisteredWorkItem","nickName","rejectHandler","RegisteredWorkForm","WorkSection","ApplySection","ApplyTitle","ApplyList","ApplyItem","ProfileSection","Photo","src","ProfileImage","alt","UserName","RejectButton","img","ManageScreen","CategoryList","onChange","WorkRegisterItem","isTitle","kind","placeholder","value","postWorkForm","post","RegisterScreen","setTitle","setDescription","setCategory","setPay","setDueDate","registerForm","length","event","target","Button","LoginScreen","setId","setPassword","handleLogin","LoginText","LoginButtonSection","LoginButton","HomeButtonSection","HomeButton","App","GlobalStyle","element","exact","createGlobalStyle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.735a491d.chunk.js","sourcesContent":["// actions\nconst LOG_IN = 'LOG_IN';\nconst LOG_OUT = 'LOG_OUT';\n\n//action creators\nfunction setLogIn(id) {\n    return {\n      type: LOG_IN,\n      id: id\n    };\n}\n\nfunction logOut() {\n    return {\n      type: LOG_OUT\n    };\n}\n\nfunction login(id, password) {\n    return dispatch => {\n        return fetch(\n          `http://3.139.42.82:8081/login`,\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              id,\n              pw: password,\n            }),\n          }\n        ).then(res => {\n            if (res.status === 200) {\n              dispatch(setLogIn(id));\n              return true;\n            } else {\n              return false;\n            }\n        })\n    }\n}\n  \nfunction logout() {\n    return dispatch => {\n        return fetch(\n          `http://3.139.42.82:8081/logout`,\n          {\n            method: 'GET'\n          }\n        ).then(res => {\n            if (res.status === 200) {\n              dispatch(logOut());\n              return true;\n            } else {\n              return false;\n            }\n        })\n    }\n}\n\nconst isLogin = (id) => {\n    return dispatch => {\n        if (id !== '') dispatch(setLogIn(id));\n    }\n};\n  \n\n// initial state\nconst initialState = {\n    isLoggedIn: false,\n    id: '',\n};\n\n// reducer\nfunction reducer(state = initialState, action) {\n    switch (action.type) {\n      case LOG_IN:\n        return applyLogIn(state, action);\n      case LOG_OUT:\n        return applyLogOut(state, action);\n      default:\n        return state;\n    }\n}\n\nfunction applyLogIn(state, action) {\n    const { id } = action;\n    sessionStorage.setItem('id', id);\n    return {\n        ...state,\n        isLoggedIn: true,\n        id: id\n    };\n}\n\nfunction applyLogOut(state, action) {\n    sessionStorage.removeItem('id');\n    return {\n        isLoggedIn: false,\n        id: ''\n    };\n}\n\n//exports\nconst actionCreators = {\n    login,\n    logout,\n    isLogin\n};\nexport { actionCreators };\n  \n//reducer exports\nexport default reducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerReducer, routerMiddleware } from 'react-router-redux';\nimport { createBrowserHistory } from 'history';\nimport users from './modules/users';\n\nconst history = createBrowserHistory();\n\nconst middlewares = [thunk, routerMiddleware(history)];\n\nconst reducer = combineReducers({\n  users,\n  routing: routerReducer,\n});\n\nlet store = initialState => createStore(reducer, applyMiddleware(...middlewares));\n\nexport { history };\n\nexport default store();","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Header = ({ isLoggedIn=false, userId='', handleLogout }) => {\n    const [currentRoute, setCurrentRoute] = useState(0);\n    const [path, setPath] = useState('/'); \n    // const { pathname } = useLocation();\n    // console.log(\"hell\" + pathname);\n    // setPath(pathname);\n    const navigation = [\n        {   \n            index: 0,\n            title: '등록된 일거리',\n            path: '/'\n        },\n        {\n            index: 1,\n            title: '일거리 등록',\n            path: '/register/work',\n            func: () => alert('일거리 등록은 Employer만 이용할 수 있습니다.\\nEmployer로 로그인 후 이용해주세요.')\n        },\n        {\n            index: 2,\n            title: '진행 작업 관리',\n            path: '/manage/work',\n            func: () => alert('진행 작업 관리는 로그인 후 이용하실 수 있습니다.')\n        },\n        {\n            index: 3,\n            title: '고객문의',\n            func: () => alert('티끌 시스템 및 서비스 이용에 관련해서 문의사항이 있으신가요?\\n문의사항은 hk7417@ajou.ac.kr로 부탁드립니다.')\n        }\n    ];\n    useEffect(() => {\n        // console.log('hi2222'+path);\n        // const detectIndex = (index) => {\n        //     let currentIndex = 0;\n        //     switch (index){\n        //         case '/': \n        //             currentIndex = 0;\n        //             break; \n        //         case '/register/work':\n        //             currentIndex = 1;\n        //             break;\n        //         case '/manage/work':\n        //             currentIndex = 2;\n        //             break;\n        //         default:\n        //             currentIndex = 100;\n        //             break; \n        //     }\n        //     setCurrentRoute(currentIndex);\n        // }\n        // console.log('hi2222'+path);\n        // detectIndex(path);\n    }, []);\n    return (\n        <HeaderContainer>\n            <LogoSection>\n                <LogoTitle>\n                    티끌\n                </LogoTitle>\n            </LogoSection>\n            <NavigationSection>\n                {\n                    navigation.map(item => \n                        item.title === '고객문의' || (item.title === '진행 작업 관리' && !isLoggedIn)\n                        ?  <NavigationAlert onClick={item.func}>\n                            {item.title}\n                        </NavigationAlert>\n                        : item.title === '일거리 등록' && userId !== 'employer1234'\n                          ? <NavigationAlert onClick={item.func}>\n                              {item.title}\n                          </NavigationAlert>\n                          : <NavigationItem>\n                            <NavigationTitle\n                                to={item.path}\n                                index={item.index}\n                                current={currentRoute}\n                            >\n                                {item.title}\n                            </NavigationTitle>\n                        </NavigationItem>\n                        \n                    )\n                }   \n            </NavigationSection>\n            <LoginSection isLoggedIn={isLoggedIn} onClick={handleLogout}>\n                {\n                    isLoggedIn\n                    ? <userIdLogin>\n                        {userId}님 | 로그아웃\n                    </userIdLogin>\n                    : <Login to='/login'>\n                        로그인\n                    </Login>\n                }\n            </LoginSection>\n        </HeaderContainer>\n    );\n}\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\n    width: 1080px;\n    height: 100px;\n    border-bottom: 1px solid gray;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    padding: 20px 20px;\n`\n\nconst LogoSection = styled.div``\n\nconst LogoTitle = styled.span`\n    font-size: 36px;\n    color: orange;\n`\n\nconst LoginSection = styled.div`\n    width: ${props => props.isLoggedIn ? '200px' : '100px'};\n    height: 30px;\n    background-color: orange;\n    color: white;\n    font-size: 12px;\n    text-align: center;\n    line-height: 30px;\n    border-radius: 20px;\n    cursor: pointer;\n`\n\nconst userIdLogin = styled.div``\n\nconst Login = styled.div``\n\nconst NavigationSection = styled.div`\n    display: flex;\n    margin: 0px 50px;\n`\n\nconst NavigationItem = styled.div`\n    width: 150px;\n`\n\nconst NavigationAlert = styled.div`\n    width: 150px;\n    font-size: 18px;\n    cursor: pointer;\n`\n\n// border-bottom: ${props => props.index === props.current ? '3px solid orange' : 'none'};\n// color: ${props => props.index === props.current ? 'orange' : 'black'};\nconst NavigationTitle = styled(Link)`\n    font-size: 18px;\n    cursor: pointer;\n`","import React from 'react';\nimport styled from 'styled-components';\nimport Header from '../Header';\n\nconst Template = (props) => {\n    return (\n        <Container>\n            <InnerContainer>\n                <Header isLoggedIn={props.isLoggedIn} userId={props.userId} handleLogout={props.handleLogout} />\n                <Contents>\n                    {props.children}\n                </Contents>\n            </InnerContainer>\n        </Container>\n    );\n}\n\nexport default Template;\n\nconst Container = styled.div`\n    min-width: 1280px;\n    text-align: center;\n`\n\nconst InnerContainer = styled.div`\n    display: inline-block;\n    margin: auto;\n`\n\nconst Contents = styled.div`\n    min-height: calc(100vh - 100px);\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    padding: 50px 0px;\n    text-align: center;\n`","import React from 'react';\nimport styled from 'styled-components';\n\nconst WorkListItem = ({ isBorder=true, title='', description='', pay=null, dueDate='', categoryName, onClick=null }) => {\n    return (\n        <Container isBorder={isBorder} onClick={onClick}>\n            <CategorySection>\n                <Category>\n                    {categoryName}\n                </Category>\n            </CategorySection>\n            <WorkInfoSection>\n                <Title>\n                    {title}\n                </Title>\n                <EmployerInfoSection>\n                    <Pay>{pay}원</Pay>\n                    <Pay>마감일: &nbsp;{dueDate}</Pay>\n                </EmployerInfoSection>\n                <Description outline={'none'} readOnly={true}>\n                    {description}\n                </Description>                \n            </WorkInfoSection>\n        </Container>\n    );\n}\n\nexport default WorkListItem;\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 230px;\n    height: 300px;\n    border: ${props => props.isBorder ? '1px solid lightgray' : 'none'};\n    border-radius: 10px;\n    padding: 20px 30px;\n    text-align: left;\n    cursor: pointer;\n    margin-top: 20px;\n`\n\nconst CategorySection = styled.div`\n    width: 230px;\n    height: 30px;\n    display: flex;\n    flex-directions: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n`\n\nconst WorkInfoSection = styled.div``\n\nconst EmployerInfoSection = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 230px;\n    height: 20px;\n    padding-top: 15px;\n    border-bottom: 0.5px solid gray;\n`\n\nconst Pay = styled.div`\n    font-size: 12px;\n`\n\nconst Title = styled.div`\n    min-height: 30px;\n    line-height: 30px;\n    font-size: 18px;\n    font-weight: bold;\n    color: orange;\n`\n\nconst Description = styled.textarea`\n    width: 240px;\n    min-height: 100px;\n    margin-top: 20px;\n    font-size: 14px;\n    color: black;\n    resize: none;\n    outline: none;\n    border: none;\n`\n\nconst Category = styled.div`\n    width: 80px;\n    height: 20px;\n    font-size: 8px;\n    line-height: 22px;\n    background-color: #E1F5FE;\n    border-radius: 20px;\n    color: black;\n    text-align: center;\n`","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://3.139.42.82:8081',\n  headers: {\n    'Content-Type' : 'application/json',\n  },\n});","import api from './';\n\nexport default async function getAllWorkList() {\n    try {\n        return await getApi();\n    } catch(err) {\n        return false;\n    }\n}\n\nconst getApi = async () => {\n    const { data: json } = await api.get(`/works`);\n    if(json) return json;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst WorkTemplate = ({title, children, isBorder=true, isLoggedIn=false, userId=''}) => {\n    return (\n        <Container>\n            <Title>\n                {title}\n            </Title>\n            <WorkForm isBorder={isBorder}>\n                {children}\n            </WorkForm>\n        </Container>\n    );\n}\n\nexport default WorkTemplate;\n\nconst Container = styled.div`\n    padding: 10px 20px;\n`\n\nconst Title = styled.div`\n    font-size: 24px;\n    font-weight: bold;\n    color: orange;\n    text-align: left;\n`\n\nconst WorkForm = styled.div`\n    width: 800px;\n    margin: 50px 20px;\n    padding: 30px;\n    border: ${props => props.isBorder ? '1px solid gray' : 'none'};\n    border-radius: 10px;\n`","import api from './';\n\nexport default async function postRequestWork(workID) {\n    try {\n        return await postApi(workID);\n    } catch(err) {\n        return false;\n    }\n}\n\nconst postApi = async (workID) => {\n    const { data: json } = await api.put(`/request/${workID}`);\n    if(json) return true;\n}","import React from 'react';\nimport ReactModal from 'react-modal';\nimport styled from 'styled-components';\n\nconst Modal = ({ isOpen, onRequestClose, title='', subtitle='', description='', cancleText='취소', acceptText='수락', cancleHandler, acceptHandler }) => {\n    return (\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={onRequestClose}\n        style={ModalStyles}\n      >\n        <ModalContent>\n            <TitleSection>\n                <Title>{title}</Title>\n                <Subtitle>{subtitle}</Subtitle>\n            </TitleSection>\n            <DescriptionSection>\n                {description}\n            </DescriptionSection>\n            <ButtonSection>\n                <CancleButton onClick={cancleHandler}>{cancleText}</CancleButton>\n                <AcceptButton onClick={acceptHandler}>{acceptText}</AcceptButton>\n            </ButtonSection>\n        </ModalContent>\n      </ReactModal>\n    );\n};\n\nconst ModalStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)',\n      borderRadius: '15px',\n      width: '350px',\n      padding : \"30px\"\n    },\n    overlay: {\n      height: \"100%\",\n      width: \"100%\",\n      margin: \"0\",\n      padding: \"0\",\n      backgroundColor: 'rgb(163, 163, 163, 0.7)',\n      zIndex: \"999\"\n    },\n};\n\nexport default Modal;\n\nconst ModalContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    font-size: 14px;\n    line-height: 18px;\n    color: orange;\n`\n\nconst TitleSection = styled.div`\n    font-weight: bold;\n`\nconst Title = styled.div`\n    font-size: 18px;\n    line-height: 18px;\n`\n\nconst Subtitle = styled.div`\n    margin-top: 10px;\n`\n\nconst DescriptionSection = styled.div`\n    margin: 30px 0px;\n`\n\nconst ButtonSection = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`\n\nconst ButtonStyle = styled.div`\n    width: 50px;\n    height: 28px;\n    font-size: 12px;\n    line-height: 28px;\n    text-align: center;\n    border-radius: 20px;\n    margin-left: 10px;\n    cursor: pointer;\n`\nconst CancleButton = styled(ButtonStyle)`\n    background-color: lightgray;\n    color: black;\n`\n\nconst AcceptButton = styled(ButtonStyle)`\n    background-color: orange;\n    color: white;\n`","export default (input) => {\n    let currentDueDate = '상시모집';\n    switch (input){\n        case null: \n            currentDueDate = '상시모집';\n            break;                                  \n        default:\n            currentDueDate = input;\n            break; \n    }\n    return currentDueDate; \n}","export default (input) => {\n    let currentCategory = '기타';\n    switch (input){\n        case 0: \n            currentCategory = '라벨링';\n            break; \n        case 1:\n            currentCategory = '설문조사';\n            break;\n        case 2:\n            currentCategory = '심부름';\n            break;\n        case 3:\n            currentCategory = '초안 번역';\n            break; \n        case 4:\n            currentCategory = '블로그 포스팅';\n            break;                                   \n        default:\n            currentCategory = '기타';\n            break; \n    }\n    return currentCategory;\n}","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Template from '../component/Template';\nimport WorkListItem from '../component/common/WorkListItem';\nimport getAllWorkList from '../api/getAllWorkList';\nimport WorkTemplate from '../component/WorkTemplate';\nimport { actionCreators as userAction } from \"../redux/modules/users\";\nimport putRequestWork from '../api/putRequestWork';\nimport Modal from '../component/Modal';\nimport searchDueDate from '../utils/searchDueDate';\nimport searchCategoryName from '../utils/searchCategoryName';\n\nconst HomeScreen = () => {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector((store) => store.users.isLoggedIn);\n    const userId = useSelector((store) => store.users.id);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [modalTitle, setModalTitle] = useState('');\n    const [applyWorkID, setApplyWorkID] = useState('');\n    const [workList, setWorkList] = useState([]);\n    const requestWork = async () => {\n        console.log(\"step1\")\n        const result = await putRequestWork(applyWorkID);\n        console.log(\"step2\")\n        if (result) {\n            console.log(\"step3\");\n            setModalIsOpen(false);\n            alert('작업이 신청되었습니다.');\n        } else {\n            console.log(\"step4\");\n            setModalIsOpen(false);\n            alert('작업 신청 중 오류가 발생했습니다. \\n잠시 후 다시 시도해주시기 바랍니다.');\n        }\n    }\n    const applyWork = (workID, title) => {\n        if (isLoggedIn && userId === 'employee1234') {\n            setApplyWorkID(workID);\n            setModalTitle(title);\n            setModalIsOpen(true);\n            // if(window.confirm('해당 작업을 신청하시겠습니까?') === true) {\n            //     requestWork(workID);\n            // } 여기부터 다시\n        } else {\n            alert(\"작업 상세정보는 준비중에 있습니다.\\n작업 신청을 원하신다면 Employee로 로그인해주세요.\")\n        }\n    }\n    const handleLogout = () => {\n        if (isLoggedIn) {\n            try {\n                dispatch(userAction.logout());\n            } catch(e) {\n                alert('로그아웃 중 오류가 발생했습니다. 화면을 종료 후 다시 실행해주세요.')\n            }\n            alert('로그아웃 되었습니다.');\n        } else {\n            window.history.pushState('', '', '/login');\n            window.location.reload();\n        }\n    }\n    useEffect(() => {\n        const id = sessionStorage.getItem('id');\n        const getAllList = async () => {\n            console.log(\"step1 getAllList\")\n            const result = await getAllWorkList();\n            console.log(\"step2 getAllList\")\n            if (result) {\n                console.log(\"step3 getAllList\")\n                setWorkList(result);\n                console.log(result);\n                // 전체 목록 페이지로 이동 추가\n            } else {\n                console.log(\"step4 getAllList\")\n                alert('작업 목록을 불러오지 못했습니다.\\n해당 탭을 닫은 후 다시 시도해주세요.');\n            }\n        }\n        getAllList(); \n        if (id) {\n            dispatch(userAction.isLogin(id));\n        }\n    }, []);\n    return (\n        <Template\n            isLoggedIn={isLoggedIn}\n            userId={userId}\n            handleLogout={handleLogout}\n        >\n            <WorkTemplate\n                title=\"등록된 일거리\"\n                isBorder={false}\n            >\n                <ListGrid>\n                    {\n                        workList.map(item => {\n                            return (\n                                <WorkListItem\n                                    title={item.title}\n                                    description={item.description}\n                                    pay={item.pay}\n                                    dueDate={searchDueDate(item.dueDate)} \n                                    categoryName={searchCategoryName(item.category)}\n                                    onClick={() => applyWork(item.workID, item.title)}\n                                />\n                            )\n                        })\n                    }\n                </ListGrid>\n            </WorkTemplate>\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}\n                title={modalTitle}\n                subtitle=\"작업을 신청하시겠습니까?\"\n                acceptText=\"신청\"\n                cancleHandler={() => setModalIsOpen(false)}\n                acceptHandler={requestWork}\n            />\n        </Template>\n    );\n}\n\nexport default HomeScreen;\n\nconst ListGrid = styled.div`\n    display: grid;\n    flex-directions: row;\n    grid-template-columns: repeat(3, 320px)};\n`","export default __webpack_public_path__ + \"static/media/profileImage1.e494122d.png\";","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport WorkListItem from './WorkListItem';\nimport ProfileImage from '../../image/profileImage1.png';\n\nconst RegisteredWorkItem = ({ title, description, pay, dueDate, categoryName, nickName, rejectHandler, acceptHandler }) => {\n    return (\n        <RegisteredWorkForm>\n            <WorkSection>\n                <WorkListItem\n                    title={title}\n                    description={description}\n                    pay={pay}\n                    dueDate={dueDate} \n                    categoryName={categoryName}                 \n                />\n            </WorkSection>\n            <ApplySection>\n                <ApplyTitle>지원자</ApplyTitle>\n                <ApplyList>\n                    <ApplyItem>\n                        <ProfileSection>\n                            <Photo src={ProfileImage} alt=\"Profile Image\"></Photo>\n                            <UserName>{nickName}</UserName>\n                        </ProfileSection>\n                        <ButtonSection>\n                            <AcceptButton onClick={acceptHandler}>수락</AcceptButton>\n                            <RejectButton onClick={rejectHandler}>거절</RejectButton>                                \n                        </ButtonSection>\n                    </ApplyItem>\n                </ApplyList>\n            </ApplySection>\n        </RegisteredWorkForm>\n    );\n}\n\nexport default RegisteredWorkItem;\n\nconst RegisteredWorkForm = styled.div`\n    display: flex;\n    flex: 1 2;\n    min-height: 300px;\n    padding: 20px;\n    border: 1px solid lightgray;\n    border-radius: 20px;\n`\n\nconst WorkSection = styled.div`\n`\n\nconst ApplySection = styled.div`\n    width: 90%;\n    margin-left: 10px;\n    margin-top: 20px;\n`\nconst ApplyTitle = styled.div`\n    font-size: 18px;\n    font-weight: bold;\n    line-height: 28px;\n    color: orange;\n    text-align: left;\n    margin-bottom: 10px;\n`\nconst ApplyList = styled.div`\n\n`\n\nconst ApplyItem = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 40px;\n    padding: 20px;\n    border: 1px solid lightgray;\n    border-radius: 20px;\n`\n\nconst ProfileSection = styled.div`\n    display: flex;\n`\nconst ButtonSection = styled.div`\n    display: flex;\n`\n\nconst Photo = styled.img`\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    object-fit: contain;\n`\n\nconst UserName = styled.div`\n    margin-left: 10px;\n    font-size: 16px;\n    line-height: 30px;\n    font-weight: bold;\n    color: orange;\n`\n\nconst ButtonStyle = styled.div`\n    width: 50px;\n    height: 28px;\n    font-size: 12px;\n    line-height: 28px;\n    text-align: center;\n    border-radius: 20px;\n    margin-left: 10px;\n    cursor: pointer;\n`\n\nconst RejectButton = styled(ButtonStyle)`\n    background-color: lightgray;\n    color: black;\n`\n\nconst AcceptButton = styled(ButtonStyle)`\n    background-color: orange;\n    color: white;\n`","import api from './';\n\nexport default async function getEmployerWorkList() {\n    try {\n        return await getApi();\n    } catch(err) {\n        return false;\n    }\n}\n\nconst getApi = async () => {\n    const { data: json } = await api.get(`/mywork-employer`);\n    if(json) return json;\n}","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Template from '../component/Template';\nimport { actionCreators as userAction } from \"../redux/modules/users\";\nimport WorkTemplate from '../component/WorkTemplate';\nimport RegisteredWorkItem from '../component/common/RegisteredWorkItem';\nimport getEmployerWorkList from '../api/getEmployerWorkList';\nimport searchDueDate from '../utils/searchDueDate';\nimport searchCategoryName from '../utils/searchCategoryName';\nimport Modal from '../component/Modal';\n\nconst ManageScreen = () => {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector((store) => store.users.isLoggedIn);\n    const userId = useSelector((store) => store.users.id);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [modalTitle, setModalTitle] = useState('');\n    const [applyWorkID, setApplyWorkID] = useState('');\n    const [registeredList, setRegisteredList] = useState([]);\n    const [workingList, setWorkingList] = useState([]);\n    const [completedList, setCompletedList] = useState([]);\n    const handleLogout = async () => {\n        try {\n            await dispatch(userAction.logout());\n            window.history.pushState('', '', '/');\n            window.location.reload();\n            alert('로그아웃 되었습니다.')\n        } catch(e) {\n            alert('로그아웃 중 오류가 발생했습니다. 화면을 종료 후 다시 실행해주세요.')\n        }\n    }\n    const handleAccept = (workID, title) => {\n        setModalIsOpen(true);\n        setApplyWorkID(workID);\n        setModalTitle(title);\n    };\n    useEffect(() => {\n        const id = sessionStorage.getItem('id');\n        const getRegisteredWork = async () => {\n            console.log(\"step1 getRegisteredWork\")\n            const result = await getEmployerWorkList();\n            console.log(\"step2 getRegisteredWork\")\n            if (result) {\n                console.log(\"step3 getRegisteredWork\")\n                setRegisteredList(result.filter(item => item.workStatus === 0 || item.workStatus === 3));\n                setWorkingList(result.filter(item => item.workStatus === 1));\n                setCompletedList(result.filter(item => item.workStatus === 2));\n                console.log(result);\n                // 전체 목록 페이지로 이동 추가\n            } else {\n                console.log(\"step4 getRegisteredWork\")\n                alert('등록한 일거리 목록을 불러오지 못했습니다.\\n해당 탭을 닫은 후 다시 시도해주세요.');\n            }\n        }\n        if (id) {\n            dispatch(userAction.isLogin(id));\n            // id === 'employer1234' && getRegisteredWork();\n        }\n    }, []);\n    return (\n        <Template\n            isLoggedIn={isLoggedIn}\n            userId={userId}\n            handleLogout={handleLogout}\n        >\n            <WorkTemplate\n                title=\"등록한 일거리\"\n                isBorder={false}       \n            >\n                <RegisteredWorkItem\n                    title={'테스트 작업 제목'}\n                    description={'테스트 작업 설명'}\n                    pay={44444}\n                    dueDate={'2021-12-28'} \n                    categoryName={'라벨링'}\n                    nickName={'김철수'}\n                    rejectHandler={() => alert('신청 거절 API 연결')}\n                    acceptHandler={() => handleAccept(100000 ,'테스트 작업 제목')}\n                />   \n                {/* {registeredList.map(item => {\n                    return (\n                        <RegisteredWorkItem\n                            title={item.title}\n                            description={item.description}\n                            pay={item.pay}\n                            dueDate={searchDueDate(item.dueDate)} \n                            categoryName={searchCategoryName(item.category)}\n                            nickName={'김철수'}\n                            rejectHandler={() => alert('신청 거절 API 연결')}\n                            acceptHandler={() => handleAccept(item.workID, item.title)}\n                        />                        \n                    )\n                })} */}\n            </WorkTemplate>\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}\n                title={modalTitle}\n                subtitle={`에 대한 김철수님 지원을 수락하시겠습니까?`}\n                description=\"수락시 보수 지급을 위한 결제가 진행됩니다.\"\n                acceptText=\"수락\"\n                cancleHandler={() => setModalIsOpen(false)}\n                acceptHandler={() => alert('작업 신청 수락API 연결하기')}\n            />\n        </Template>\n    );\n}\n\nexport default ManageScreen;\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst CategoryList = ({onChange, category}) => {\n    return (\n        <CategorySection>\n            <Category category={category===0} onClick={() => onChange(0)}>라벨링</Category>\n            <Category category={category===1} onClick={() => onChange(1)}>설문조사</Category>\n            <Category category={category===2} onClick={() => onChange(2)}>심부름</Category>\n            <Category category={category===3} onClick={() => onChange(3)}>초안 번역</Category>\n            <Category category={category===4} onClick={() => onChange(4)}>블로그 포스팅</Category>\n            <Category category={category===5} onClick={() => onChange(5)}>기타</Category>\n        </CategorySection>\n    );\n}\nconst WorkRegisterItem = ({isTitle=true, title, description, kind = 'text', onChange, category, placeholder}) => {\n    return (\n        <Container>\n            {\n                isTitle && \n                <Title>\n                    {title}\n                </Title>\n            }\n            {\n                kind === 'category'\n                ? <CategoryList\n                    category={category}\n                    onChange={onChange}\n                />\n                : <Description \n                    type=\"text\" \n                    kind={kind}\n                    value={description} \n                    onChange={onChange}\n                    placeholder={placeholder}\n                />\n            }\n        </Container>\n    );\n}\n\nexport default WorkRegisterItem;\n\nconst Container = styled.div`\n    margin: 40px 0px;\n`\n\nconst Title = styled.div`\n    width: 600px;\n    height: 30px;\n    padding: 0px 20px;\n    font-size: 18px;\n    font-weight: bold;\n    color: orange;\n    text-align: left;\n`\n\nconst Description = styled.textarea`\n    width: 600px;\n    height: ${props => props.kind === 'desc' ? '100px' : '30px'};\n    padding: 20px;\n    text-align: left;\n    border: 1px solid #E1F5FE;\n    border-radius: 20px;\n    background-color: #E1F5FE;\n    font-size: 16px;\n    color: black;\n    resize: none;\n`\n\nconst CategorySection = styled.div`\n    width: 600px;\n    padding: 20px;\n    display: flex;\n    margin: auto;\n`\n\nconst Category = styled.div`\n    width: 80px;\n    height: 30px;\n    font-size: 12px;\n    line-height: 33px;\n    background-color: ${props => props.category ? 'orange' : '#E1F5FE'};\n    margin-right: 20px;\n    border-radius: 20px;\n    cursor: pointer;\n    color: ${props => props.category ? 'white' : 'black'};\n`","// export default async function postWorkForm(title, description, pay, category, dueDate) {\n//     try {\n//         console.log(\"작업등록 정보: \",title, description, pay, category, dueDate);\n//         return await fetch(\n//             `http://3.139.42.82:8081/work-form`,\n//             {\n//               method: 'POST',\n//               headers: {\n//                 'Content-Type': 'application/json',\n//               },\n//               body: JSON.stringify({\n//                 title, \n//                 description, \n//                 pay, \n//                 category, \n//                 dueDate\n//               }),\n//             }\n//           ).then(res => {\n//               return res.status === 200 ? true : false;\n//           })\n//     } catch(err) {\n//         return false;\n//     }\n// }\nimport api from './';\n\nexport default async function postWorkForm(title, description, pay, category, dueDate) {\n    try {\n        return await postApi(title, description, pay, category, dueDate);\n    } catch(err) {\n        return false;\n    }\n}\n\nconst postApi = async (title, description, pay, category, dueDate) => {\n    console.log('작업 등록 API'+ title+ description+ pay+ category+ dueDate);\n    const { data: json } = await api.post(`/work-form`, {\n        title,\n        description,\n        pay,\n        category,\n        dueDate\n    });\n    if(json) return true;\n}","import React, {useState, useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Template from '../component/Template';\nimport WorkTemplate from '../component/WorkTemplate';\nimport WorkRegisterItem from '../component/common/WorkRegisterItem';\nimport styled from 'styled-components';\nimport postWorkForm from '../api/postWorkForm';\nimport { actionCreators as userAction } from \"../redux/modules/users\";\n\nconst RegisterScreen = () => {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector((store) => store.users.isLoggedIn);\n    const userId = useSelector((store) => store.users.id);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState(0);\n    const [pay, setPay] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const handleTitle = event => {\n        const {\n          target: { value },\n        } = event;\n        value.length <= 30 && setTitle(value);\n    };\n    const handleDescription = event => {\n        const {\n          target: { value },\n        } = event;\n        setDescription(value);\n    };\n    const handlePay = event => {\n        const {\n          target: { value },\n        } = event;\n        setPay(value);\n    };\n    const handleCategory = (input = 0) => {\n        setCategory(input);\n    };\n    const handleDueDate = event => {\n        const {\n          target: { value },\n        } = event;\n        setDueDate(value);\n    };\n    const registerForm = async () => {\n        console.log(\"step1\")\n        const result = await postWorkForm(title, description, pay*1, category, dueDate);\n        console.log(\"step2\")\n        if (result) {\n            console.log(\"step3\")\n            alert('작업 등록이 완료되었습니다.');\n            // 전체 목록 페이지로 이동 추가\n        } else {\n            console.log(\"step4\")\n            alert('작업이 등록 중 오류가 발생했습니다. 잠시 후 다시 시도해주시길 바랍니다.');\n        }\n    }\n    const handleLogout = async () => {\n        try {\n            await dispatch(userAction.logout());\n            window.history.pushState('', '', '/');\n            window.location.reload();\n            alert('로그아웃 되었습니다.')\n        } catch(e) {\n            alert('로그아웃 중 오류가 발생했습니다. 화면을 종료 후 다시 실행해주세요.')\n        }\n    }\n    useEffect(() => {\n        const id = sessionStorage.getItem('id');\n        if (id) {\n            dispatch(userAction.isLogin(id));\n        }\n    }, []);\n    return (\n        <Template\n            isLoggedIn={isLoggedIn}\n            userId={userId}\n            handleLogout={handleLogout}\n        >\n            <WorkTemplate\n                title=\"일거리 등록\"\n            >\n                <WorkRegisterItem\n                    title={`제목(${title.length}/최대 30자)`}\n                    placeholder=\"제목은 30자 이내로 입력해주세요\"\n                    kind=\"text\"\n                    description={title}\n                    onChange={handleTitle}\n                />\n                <WorkRegisterItem\n                    title={\"카테고리\"}\n                    category={category}\n                    kind='category'\n                    description={category}\n                    onChange={handleCategory}\n                />\n                <WorkRegisterItem\n                    title={\"작업 설명\"}\n                    placeholder=\"작업의 상세한 설명을 입력해주세요\"\n                    kind='desc'\n                    description={description}\n                    onChange={handleDescription}\n                />\n                <WorkRegisterItem\n                    title={'보수'}\n                    placeholder=\"작업의 보수를 숫자로 입력해주세요\"\n                    kind='text'\n                    description={pay}\n                    onChange={handlePay}\n                />\n                <WorkRegisterItem\n                    title={'작업 완료 기간(YYYY-MM-DD)'}\n                    placeholder=\"작업 완료 기간은 YYYY-MM-DD 형식으로 입력해주세요\"\n                    kind='text'\n                    description={dueDate}\n                    onChange={handleDueDate}\n                />\n                <Button onClick={registerForm}>\n                    등록 완료\n                </Button>\n            </WorkTemplate>\n        </Template>\n    );\n}\n\nexport default RegisterScreen;\n\nconst Button = styled.div`\n    width: 642px;\n    height: 60px;\n    line-height: 60px;\n    color: white;\n    font-size: 16px;\n    font-weight: bold;\n    background-color: orange;\n    border-radius: 20px;\n    cursor: pointer;\n    margin: auto;\n    margin-top: 50px;\n`","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport WorkRegisterItem from '../component/common/WorkRegisterItem';\nimport { Link } from 'react-router-dom';\nimport { actionCreators as userAction } from \"../redux/modules/users\";\n\nconst LoginScreen = ( ) => {\n    const [id, setId] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n    const handleId = event => {\n        const {\n          target: { value },\n        } = event;\n        setId(value);\n    };\n    const handlePassword = event => {\n        const {\n          target: { value },\n        } = event;\n        setPassword(value);\n    };\n    const handleLogin = async () => {\n        if (id === 'employer1234' && password === 'dkwneo1234') {\n            try {\n                await dispatch(userAction.login(id, password));\n            } catch(e) {\n                alert('로그인 중 오류가 발생했습니다.\\n다시 로그인해주시기 바랍니다.');\n            }\n            alert('employer1234님 로그인에 성공하셨습니다.');\n            window.history.pushState('', '', '/');\n            window.location.reload();\n        }\n        else if (id === 'employee1234' && password === 'dkwneo1234') {\n            try {\n                await dispatch(userAction.login(id, password));\n            } catch(e) {\n                alert('로그인 중 오류가 발생했습니다.\\n다시 로그인해주시기 바랍니다.');\n            }\n            alert('employee1234님 로그인에 성공하셨습니다.');\n            window.history.pushState('', '', '/');\n            window.location.reload();\n        }\n        else {\n            alert('올바르지 않은 아이디 또는 패스워드입니다.\\n로그인 정보를 다시 확인해주세요.');\n        }\n    }\n    return (\n        <Container>\n            <InnerContainer>\n                <LogoSection>\n                    <Title>티끌</Title>\n                    &nbsp;&nbsp;\n                    <LoginText>로그인</LoginText>\n                </LogoSection>\n                <LoginSection>\n                    <WorkRegisterItem \n                        isTitle={false} \n                        description={id} \n                        placeholder=\"아이디\" \n                        kind=\"text\" \n                        onChange={handleId}\n                    />\n                    <WorkRegisterItem \n                        isTitle={false} \n                        description={password} \n                        placeholder=\"비밀번호\" \n                        kind=\"text\" \n                        onChange={handlePassword}\n                    />\n                </LoginSection>\n                <ButtonSection>\n                    <LoginButtonSection>\n                        <LoginButton onClick={handleLogin}>\n                            로그인\n                        </LoginButton>\n                    </LoginButtonSection>\n                    <HomeButtonSection>\n                        <HomeButton\n                            to='/'\n                        >\n                            홈으로\n                        </HomeButton>\n                    </HomeButtonSection>\n                </ButtonSection>\n            </InnerContainer>\n        </Container>\n    );\n}\n\nexport default LoginScreen;\n\nconst Container = styled.div`\n    padding: 0px;\n    margin: 0px;\n    width: 100vw;\n    height: 100vh;\n    background-color: orange;\n`\n\nconst InnerContainer = styled.div`\n    min-width: 600px;\n    height: 400px;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    margin: auto;\n    text-align: center;\n    background-color: white;\n    border-radius: 20px;\n    padding: 30px;\n`\nconst LogoSection = styled.div`\n    height: 40px;\n    justify-content: center;\n    align-items: center;\n    display: flex;\n`\nconst LoginSection = styled.div``\n\nconst ButtonSection = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst Title = styled.div`\n    font-size: 28px;\n    font-weight: bold;\n    color: orange;\n    text-align: center;\n`\n\nconst LoginText = styled.div`\n    font-size: 24px;\n    font-weight: bold;\n    color: gray;\n    text-align: center;\n`\n\nconst LoginButtonSection = styled.div`\n    margin: auto;\n`\n\nconst LoginButton = styled.div`\n    width: 140px;\n    height: 40px;\n    line-height: 40px;\n    background-color: orange;\n    color: white;\n    font-size: 24px;\n    cursor: pointer;\n    border-radius: 10px;\n`\n\nconst HomeButtonSection = styled.div`\n    padding-top: 20px;\n    height: 30px;\n`\n\nconst HomeButton = styled(Link)`\n    color: gray;\n    font-size: 16px;\n    cursor: pointer;\n`","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Routes, Route } from 'react-router-dom';\nimport HomeScreen from '../HomeScreen';\nimport ManageScreen from '../ManageScreen';\nimport RegisterScreen from '../RegisterScreen';\nimport LoginScreen from '../LoginScreen';\nimport NotFoundScreen from '../NotFoundScreen';\n\n\nconst App = () => {\n    return (\n        <Container>\n            <GlobalStyle/>\n            <Routes>\n                {/* <Route path='*' element={<NotFoundScreen/>} /> */}\n                {/* <Route exact path='/' element={<HomeScreen/>} /> */}\n                <Route path='*' element={<HomeScreen/>} />\n                <Route exact path='/register/work' element={<RegisterScreen/>} />\n                <Route exact path='/manage/work' element={<ManageScreen/>} />\n                <Route exact path='/login' element={<LoginScreen/>} />\n            </Routes>\n        </Container>\n    );\n}\n\nexport default App;\n\nconst GlobalStyle = createGlobalStyle`\n    *, input, button {\n        font-family: 'Noto Sans KR', sans-serif;\n        font-style: normal;\n        font-size: 16px;\n    }\n\tbody {\n        font-family: 'Noto Sans KR', sans-serif;\n        font-style: normal;\n        font-size: 16px;\n        line-height: 0px;\n\t\tpadding: 0;\n        margin: 0;\n        white-space: pre-line;\n    }\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    li {\n        list-style-type : none\n    }\n    ul {\n        margin-block-start: 0px;\n        margin-block-end: 0px;\n        padding-inline-start: 0px;\n    }\n`;\n\nconst Container = styled.div``;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundScreen = () => {\n    return (\n        <Container>\n            <InnerContainer>\n                <Title>\n                    티끌\n                </Title>\n                <Description>\n                    이용에 불편을 드려 죄송합니다.\n                    <br/>입력하신 페이지의 URL이 변경되었거나 존재하지 않는 페이지입니다.\n                    <br/>입력하신 주소가 정확한지 다시 한번 확인해 주시기 바랍니다.\n                </Description>\n                <HomeButton\n                    to='/'\n                >\n                    홈으로\n                </HomeButton>\n            </InnerContainer>\n        </Container>\n    );\n}\n\nexport default NotFoundScreen;\n\nconst Container = styled.div`\n    padding: 0px;\n    margin: 0px;\n    width: 100vw;\n    height: 100vh;\n    background-color: white;\n`\n\nconst InnerContainer = styled.div`\n    min-width: 500px;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    margin: auto;\n    color: orange;\n    text-align: center;\n`\n\nconst Title = styled.div`\n    font-size: 48px;\n    line-height: 60px;\n`\n\nconst Description = styled.div`\n    font-size: 16px;\n    line-height: 24px;\n    margin: 20px 0px;\n`\n\nconst HomeButton = styled(Link)`\n    display: block;\n    width: 100px;\n    height: 30px;\n    line-height: 30px;\n    margin: auto;\n    border-radius: 20px;\n    background-color: orange;\n    font-size: 16px;\n    color: white;\n    cursor: pointer;\n`\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/configureStore\";\nimport './index.css';\nimport App from './screens/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}